---
    - name: Install Dependencies
      apt:
        name:
          - "openjdk-{{ jdk_version }}-jdk"
          - "unzip"
        state: present

    - name: Create PostgreSQL APT repository configuration
      ansible.builtin.copy:
        content: "deb {{ pgdg_repo_url }} {{ pgdg_repo_version }}-pgdg main\n"
        dest: "/etc/apt/sources.list.d/pgdg.list"

    - name: Import PostgreSQL repository signing key
      ansible.builtin.apt_key:
        url: "{{ pgdg_key_url }}"
        state: present

    - name: Update package lists
      ansible.builtin.apt:
        update_cache: yes

    - name: Install the latest version of PostgreSQL
      ansible.builtin.apt:
        name: "{{ postgresql_package_name }}-{{ postgres_version }}"
        state: latest
      async: 60
      poll: 60

    - name: Start and enable PostgreSQL service
      systemd:
        name: "postgresql"
        state: started
        enabled: yes

    - name: Create PostgreSQL user for SonarQube
      command: sudo -u postgres createuser {{ sonarqube_user }} --no-createdb --no-superuser --no-createrole
      tags: postgres_setup

    - name: Set password for PostgreSQL user SonarQube
      command: sudo -u postgres psql -c "ALTER USER {{ sonarqube_user }} WITH PASSWORD '{{ sonarqube_password }}';"
      tags: postgres_setup

    - name: Create PostgreSQL database for SonarQube
      command: sudo -u postgres createdb -O {{ sonarqube_user }} {{ sonarqube_db }}
      tags: postgres_setup

    - name: Grant privileges on the SonarQube database
      command: sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE {{ sonarqube_db }} TO {{ sonarqube_user }};"
      tags: postgres_setup

    - name: Create SonarQube user
      ansible.builtin.user:
        name: sonarqube
        createhome: no
        home: /opt/sonarqube
        shell: /bin/bash

    - name: Add vm.max_map_count and fs.file-max to sysctl.conf
      ansible.builtin.lineinfile:
        path: /etc/sysctl.conf
        line: "{{ item }}"
      loop:
        - "vm.max_map_count=524288"
        - "fs.file-max=131072"

    - name: Reload sysctl settings
      command: sysctl --system

    - name: Create 99-sonarqube.conf file
      file:
        path: /etc/security/limits.d/99-sonarqube.conf
        state: touch

    - name: Create 99-sonarqube.conf file with Config
      ansible.builtin.blockinfile:
        path: /etc/security/limits.d/99-sonarqube.conf
        block: |
          sonarqube - nofile 131072
          sonarqube - nproc 8192

    - name: Ensure SonarQube home directory exists
      file:
        path: "{{ sonarqube_home }}"
        state: directory
        owner: sonarqube
        group: sonarqube

    - name: Download and extract SonarQube
      get_url:
        url: "{{ sonarqube_download_url }}"
        dest: "/tmp/sonarqube-{{ sonarqube_version }}.zip"

    - name: Extract SonarQube archive
      unarchive:
        src: "/tmp/sonarqube-{{ sonarqube_version }}.zip"
        dest: "{{ sonarqube_home }}"
        remote_src: yes

    - name: Create a symbolic link to SonarQube home
      file:
        src: "{{ sonarqube_home }}/sonarqube-{{ sonarqube_version }}"
        dest: "{{ sonarqube_home }}/current"
        state: link

    - name: Create SonarQube system user
      user:
        name: sonarqube
        system: yes

    - name: Set ownership of SonarQube files
      file:
        path: "{{ sonarqube_home }}"
        state: directory
        owner: sonarqube
        group: sonarqube
        recurse: yes

    - name: Configure SonarQube
      template:
        src: sonarqube.conf.j2
        dest: "{{ sonarqube_home }}/current/conf/sonar.properties"

    - name: Create SonarQube service file
      template:
        src: sonarqube.service.j2
        dest: "/etc/systemd/system/sonarqube.service"

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Start SonarQube service
      systemd:
        name: sonarqube
        state: started
        enabled: yes
